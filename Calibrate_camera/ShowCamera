from pypylon import pylon
import cv2

def show_video():
    # Create an instant camera object with the camera device found first.
    camera = pylon.InstantCamera(pylon.TlFactory.GetInstance().CreateFirstDevice())

    # Open the camera to access its features.
    camera.Open()

    # Start grabbing images continuously.
    camera.StartGrabbing(pylon.GrabStrategy_LatestImageOnly)
    converter = pylon.ImageFormatConverter()

    # Setting the converter to convert images to OpenCV format.
    converter.OutputPixelFormat = pylon.PixelType_BGR8packed
    converter.OutputBitAlignment = pylon.OutputBitAlignment_MsbAligned

    while camera.IsGrabbing():
        # Retrieve a single image grab result.
        grabResult = camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)

        if grabResult.GrabSucceeded():
            # Convert the grab result to an OpenCV image.
            image = converter.Convert(grabResult)
            img = image.GetArray()

            # Display the image with OpenCV.
            cv2.namedWindow('Camera Video', cv2.WINDOW_NORMAL)
            cv2.imshow('Camera Video', img)

            # Break the loop on pressing the 'ESC' key.
            k = cv2.waitKey(1)
            if k == 27:
                break

        # Release the grab result.
        grabResult.Release()

    # Stopping the camera and closing any open windows.
    camera.StopGrabbing()
    camera.Close()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    show_video()
